---

- include_role:
    name: namespace
    tasks_from: create
  vars:
    name: "{{ ups_namespace }}"
    display_name: "Mobile UnifiedPush Server"
    monitor: true
    is_service: true

- name: Install ups resources
  shell: "oc apply -f {{ item }} -n {{ ups_namespace }}"
  with_items: "{{ ups_resources }}"

- name: Copy role binding template
  template:
    src: role_binding.yml.j2
    dest: "{{ ups_template_dir }}/role-binding.yml"

- name: Create role binding
  shell: "oc apply -f {{ ups_template_dir }}/role-binding.yml -n {{ ups_namespace }}"

- name: Delete role binding temporary file
  file:
    path: "{{ ups_template_dir }}/role-binding.yml"
    state: absent

- name: Check if enmasse resources are available in ups namespace
  block:
    - include_tasks: check-enmasse-readiness.yml
      vars:
        resource_type: 'addressspace'
        resource_name: dummy.local
    - include_tasks: check-enmasse-readiness.yml
      vars:
        resource_type: 'address'
        resource_name: dummy.local
    - include_tasks: check-enmasse-readiness.yml
      vars:
        resource_type: 'messaginguser'
        resource_name: dummy.local

- name: Process operator template
  template:
    src: operator.yml.j2
    dest: "{{ ups_template_dir }}/ups-operator.yml"

- name: Provision ups operator
  shell: "oc apply -f {{ ups_template_dir }}/ups-operator.yml -n {{ ups_namespace }}"

- name: Get deployment desired replicas
  shell: "oc get deployment/unifiedpush-operator -o jsonpath='{.spec.replicas}' -n {{ ups_namespace }}"
  register: ups_operator_replicas_cmd

- name: Wait for operator readiness
  shell: "oc get deployment/unifiedpush-operator -o jsonpath='{.status.availableReplicas}' -n {{ ups_namespace }}"
  register: result
  until: result.stdout == ups_operator_replicas_cmd.stdout
  retries: 50
  delay: 10
  changed_when: False
